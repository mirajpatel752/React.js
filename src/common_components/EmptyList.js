import React, { useState } from 'react'
import { useHistory } from 'react-router-dom'
import { Button, DropdownMenu, DropdownItem, DropdownToggle, Dropdown } from 'reactstrap'

const EmptyList = ({ heading, detail, button_text, button_url, link_url, button_url_state, toggleSidebar, access_rights, optionData = [] }) => {
  const [emptyDropdown, setEmptyDropdown] = useState(false)

  const blank_list_svg = () => {

    return (
      <><svg width="226" height="226" viewBox="0 0 226 226" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M187 113.42C187 124.53 184.56 135.06 180.17 144.51C168.44 169.86 142.78 187.42 113 187.42C83.23 187.42 57.57 169.86 45.83 144.51C41.44 135.06 39 124.53 39 113.42C39 72.5399 72.12 39.4199 113 39.4199C153.89 39.4199 187 72.5399 187 113.42V113.42Z" fill="#F0F1F2" />
        <g filter="url(#filter0_d_11720_102959)">
          <path d="M168.999 65V148.526L132.999 167H94.795L56 149V41C56 40.4696 56.2107 39.9609 56.5858 39.5858C56.9609 39.2107 57.4696 39 58 39H143V63C143 63.5304 143.211 64.0391 143.586 64.4142C143.961 64.7893 144.47 65 145 65H168.999Z" fill="white" />
          <path d="M169 65H145C144.47 65 143.961 64.7893 143.586 64.4142C143.211 64.0391 143 63.5304 143 63V39L169 65Z" fill="#D2D5D9" />
        </g>
        <path d="M97 58H129" stroke="#1874EA" strokeWidth="6" strokeLinecap="round" />
        <path d="M75.418 174.422H112.918C114.018 174.422 114.918 173.522 114.918 172.422V171.422H107.978C107.118 171.422 106.358 170.872 106.078 170.052L98.988 148.782C98.8555 148.383 98.6006 148.036 98.2595 147.79C97.9184 147.544 97.5085 147.412 97.088 147.412H66.918L73.418 172.412C73.418 173.522 74.318 174.422 75.418 174.422V174.422Z" fill="#B6BABF" />
        <path d="M148.918 163.422H80.918V176.422H148.918V163.422Z" fill="#398AF1" />
        <path d="M178.657 147.42C175.977 152.6 172.697 157.42 168.917 161.8L167.477 163.42C153.947 178.17 134.507 187.42 112.917 187.42C91.3268 187.42 71.8868 178.17 58.3568 163.42L56.9168 161.8C53.1368 157.42 49.8568 152.6 47.1768 147.42H89.4768C90.3368 147.42 91.0968 147.97 91.3768 148.79L98.4668 170.06C98.5992 170.459 98.8541 170.806 99.1952 171.052C99.5363 171.298 99.9462 171.43 100.367 171.43H129.487C130.347 171.43 131.107 170.88 131.387 170.06L138.477 148.79C138.609 148.391 138.864 148.044 139.205 147.798C139.546 147.552 139.956 147.42 140.377 147.42H178.657V147.42Z" fill="#1874EA" />
        <path d="M88.001 78.0039H70.001C68.901 78.0039 68.001 78.9039 68.001 80.0039V84.0039C68.001 85.1039 68.901 86.0039 70.001 86.0039H88.001C89.101 86.0039 90.001 85.1039 90.001 84.0039V80.0039C90.001 78.9039 89.101 78.0039 88.001 78.0039ZM88.001 92.0039H70.001C68.901 92.0039 68.001 92.9039 68.001 94.0039C68.001 95.1039 68.901 96.0039 70.001 96.0039H88.001C89.101 96.0039 90.001 95.1039 90.001 94.0039C90.001 92.9039 89.101 92.0039 88.001 92.0039ZM157.882 78.0069H126.118C124.953 78.0069 124 78.9069 124 80.0069V84.0069C124 85.1069 124.953 86.0069 126.118 86.0069H157.882C159.047 86.0069 160 85.1069 160 84.0069V80.0069C160 78.9069 159.047 78.0069 157.882 78.0069ZM150.001 92.0039H126.001C124.901 92.0039 124.001 92.9039 124.001 94.0039C124.001 95.1039 124.901 96.0039 126.001 96.0039H150.001C151.101 96.0039 152.001 95.1039 152.001 94.0039C152.001 92.9039 151.101 92.0039 150.001 92.0039ZM114.001 78.0039H100.001C98.901 78.0039 98.001 78.9039 98.001 80.0039V84.0039C98.001 85.1039 98.901 86.0039 100.001 86.0039H114.001C115.101 86.0039 116.001 85.1039 116.001 84.0039V80.0039C116.001 78.9039 115.101 78.0039 114.001 78.0039ZM108.001 92.0039H100.001C98.901 92.0039 98.001 92.9039 98.001 94.0039C98.001 95.1039 98.901 96.0039 100.001 96.0039H108.001C109.101 96.0039 110.001 95.1039 110.001 94.0039C110.001 92.9039 109.101 92.0039 108.001 92.0039Z" fill="#E8E9EB" />
        <path d="M88.001 101.004H70.001C68.901 101.004 68.001 101.904 68.001 103.004C68.001 104.104 68.901 105.004 70.001 105.004H88.001C89.101 105.004 90.001 104.104 90.001 103.004C90.001 101.904 89.101 101.004 88.001 101.004ZM150.001 101.004H126.001C124.901 101.004 124.001 101.904 124.001 103.004C124.001 104.104 124.901 105.004 126.001 105.004H150.001C151.101 105.004 152.001 104.104 152.001 103.004C152.001 101.904 151.101 101.004 150.001 101.004ZM108.001 101.004H100.001C98.901 101.004 98.001 101.904 98.001 103.004C98.001 104.104 98.901 105.004 100.001 105.004H108.001C109.101 105.004 110.001 104.104 110.001 103.004C110.001 101.904 109.101 101.004 108.001 101.004Z" fill="#E8E9EB" />
        <path d="M88.001 110.004H70.001C68.901 110.004 68.001 110.904 68.001 112.004C68.001 113.104 68.901 114.004 70.001 114.004H88.001C89.101 114.004 90.001 113.104 90.001 112.004C90.001 110.904 89.101 110.004 88.001 110.004ZM150.001 110.004H126.001C124.901 110.004 124.001 110.904 124.001 112.004C124.001 113.104 124.901 114.004 126.001 114.004H150.001C151.101 114.004 152.001 113.104 152.001 112.004C152.001 110.904 151.101 110.004 150.001 110.004ZM108.001 110.004H100.001C98.901 110.004 98.001 110.904 98.001 112.004C98.001 113.104 98.901 114.004 100.001 114.004H108.001C109.101 114.004 110.001 113.104 110.001 112.004C110.001 110.904 109.101 110.004 108.001 110.004Z" fill="#E8E9EB" />
        <path d="M88.001 119.004H70.001C68.901 119.004 68.001 119.904 68.001 121.004C68.001 122.104 68.901 123.004 70.001 123.004H88.001C89.101 123.004 90.001 122.104 90.001 121.004C90.001 119.904 89.101 119.004 88.001 119.004ZM150.001 119.004H126.001C124.901 119.004 124.001 119.904 124.001 121.004C124.001 122.104 124.901 123.004 126.001 123.004H150.001C151.101 123.004 152.001 122.104 152.001 121.004C152.001 119.904 151.101 119.004 150.001 119.004ZM108.001 119.004H100.001C98.901 119.004 98.001 119.904 98.001 121.004C98.001 122.104 98.901 123.004 100.001 123.004H108.001C109.101 123.004 110.001 122.104 110.001 121.004C110.001 119.904 109.101 119.004 108.001 119.004Z" fill="#E8E9EB" />
        <path d="M88.001 128.004H70.001C68.901 128.004 68.001 128.904 68.001 130.004C68.001 131.104 68.901 132.004 70.001 132.004H88.001C89.101 132.004 90.001 131.104 90.001 130.004C90.001 128.904 89.101 128.004 88.001 128.004ZM150.001 128.004H126.001C124.901 128.004 124.001 128.904 124.001 130.004C124.001 131.104 124.901 132.004 126.001 132.004H150.001C151.101 132.004 152.001 131.104 152.001 130.004C152.001 128.904 151.101 128.004 150.001 128.004ZM108.001 128.004H100.001C98.901 128.004 98.001 128.904 98.001 130.004C98.001 131.104 98.901 132.004 100.001 132.004H108.001C109.101 132.004 110.001 131.104 110.001 130.004C110.001 128.904 109.101 128.004 108.001 128.004Z" fill="#E8E9EB" />
        <defs>
          <filter id="filter0_d_11720_102959" x="46" y="31" width="133" height="148" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
            <feFlood floodOpacity="0" result="BackgroundImageFix" />
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
            <feOffset dy="2" />
            <feGaussianBlur stdDeviation="5" />
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0" />
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_11720_102959" />
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_11720_102959" result="shape" />
          </filter>
        </defs>
      </svg></>
    )
  }
  const history = useHistory()

  const openModule = (button_url) => {
    if (button_url) {
      if (button_url_state) {
        history.push(button_url, button_url_state)
      } else {
        history.push(button_url)
      }
    } else {
      toggleSidebar()
    }
  }
  return (
    <>
      <span className='munim-slogan-btn-cent'>{blank_list_svg()}</span>
      <h3 className='text-center mt-1'>{heading}</h3>
      <h5 className={access_rights ? 'text-center text-secondary pb-2' : 'text-center text-secondary '}>{detail}</h5>
      {access_rights ? <div className='munim-slogan-btn-cent'>
        <Button type='button' color={'primary'} onClick={() => { openModule(button_url) }}>{button_text}</Button>
      </div> : ''}
      {optionData.length ? <div className='munim-empty-primary-dropdown d-flex justify-content-center mt-2'>
        <Dropdown isOpen={emptyDropdown} toggle={() => setEmptyDropdown((prevState) => !prevState)}>
          <DropdownToggle className='dropdown-toggle-split' color="primary" caret>+ Create Custom Report</DropdownToggle>
          <DropdownMenu end container="body" className='munim-empty-dropdown-list py-0'>
            {optionData.map(item => <DropdownItem onClick={(e) => { e.preventDefault(); history.push(item.link, { customFilterDetail: { editMode: true } }) }}>{item.label}</DropdownItem>)}
          </DropdownMenu>
        </Dropdown>
      </div> : ''}
      {link_url ? <h5 className='text-center pt-2'>Do you need more help? <a className='munim-helpdesk-link' href={`${link_url}`} target='_blank'>Click here</a></h5> : ''}
    </>
  )
}

export default EmptyList